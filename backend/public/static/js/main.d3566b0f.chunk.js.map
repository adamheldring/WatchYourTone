{"version":3,"sources":["components/header/header.js","components/constants.js","components/amodules/sequenser/synthKey.js","components/amodules/sequenser/synthModule.js","components/amodules/sequenser/seqDrum.js","components/amodules/sequenser/drumsModule.js","components/amodules/settings/settings.js","components/amodules/sequenser/sequenser.js","components/amodules/saveLoad/saveLoad.js","components/pages/composerPage/composerPage.js","components/pages/404/404.js","components/app.js","index.js"],"names":["Header","react_default","a","createElement","className","React","Component","WYT_SERVER_URL","EMPTY_SYNTH_MATRIX","Array","fill","EMPTY_DRUM_MATRIX","SNARE_DRUM_SETTINGS","noise","type","envelope","attack","decay","sustain","release","HIHAT_DRUM_SETTINGS","frequency","harmonicity","modulationIndex","resonance","octaves","SYNTH_NOTES","DEFAULT_BPM","DEFAULT_WAVEFORM","DEFAULT_SONG_TITLE","DEFAULT_COMPOSER","DRUM_ICONS","COLOR_GRADIENT","SynthKey","_this","this","props","synthKeyIndex","slice","bars","map","bar","barIndex","synthKeyMatrix","key","onClick","handleNoteClick","SynthModule","passUpNoteClick","_this2","_this$props","synth","activeBar","src","alt","index","style","backgroundColor","concat","synthKey","sequenser_synthKey","SeqDrum","drumIndex","drumMatrix","handleDrumClick","DrumsModule","passUpBeatClick","drums","drum","seqDrum","Settings","handleBpmChange","e","changeBpm","target","value","handleWaveChange","changeWaveForm","bpm","synthWaveForm","name","min","max","onChange","toUpperCase","htmlFor","id","checked","Sequenser","state","resetTransport","loadedSongTitle","loadedSongComposer","checkForActiveSession","sessionStorage","getItem","setState","JSON","parse","err","console","log","startPlaying","StartAudioContext","Tone","context","then","Transport","start","stopPlaying","stop","rewindPlaying","newDrumMatrix","newSynthMatrix","newBpm","rampTo","newWaveForm","clearMatrix","removeItem","soundGenerator","latencyHint","freeverb","Freeverb","toMaster","gain","Gain","connect","MembraneSynth","NoiseSynth","MetalSynth","forEach","synths","i","push","Synth","transportIndex","scheduleRepeat","time","step","oscillator","setNewWaveForm","Promise","resolve","all","synthIndex","triggerAttackRelease","cancel","prevProps","prevState","newSongLoaded","resetSongLoader","setItem","stringify","_this$state","synthModule","drumsModule","settings_settings","SaveLoad","songTitle","composer","songList","songToLoad","loadedSong","handleFormChange","Object","defineProperty","clearFields","submitSave","preventDefault","newSong","songId","Date","now","createdDate","waveform","fetch","headers","Content-Type","method","body","data","loadSongList","loadNewSong","catch","error","alert","submitLoad","response","json","loadSongToStorage","_this$state2","onSubmit","placeholder","required","size","sort","b","song","ComposerPage","sequenser_sequenser","saveLoad_saveLoad","NotFound","App","react_router_dom","header_header","react_router","exact","path","component","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.d3566b0f.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./header.scss\"\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <div className=\"header-container\">\n        <div className=\"header__mainHeading-container\">\n          <h2 className=\"header__mainHeading\">WATCH YOUR TONE</h2>\n          <h2 className=\"header__mainHeading header__mainHeading--shadow\">WATCH YOUR TONE</h2>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Header\n","// WATCH YOUR TONE – CONSTANS\n\n// Detects and swithches server url depending on if live or local environment\nexport const WYT_SERVER_URL =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://watchyourtone.onrender.com\"\n    : \"http://localhost:8080\";\n\n// Creates default empty SYNTH MATRIX for sequenser\nexport const EMPTY_SYNTH_MATRIX = () => [\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n];\n\n// Creates default empty DRUM MATRIX for sequenser\nexport const EMPTY_DRUM_MATRIX = () => [\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n];\n\n// NOISE SYNTH SETTINGS OBJECT – Adam's snare drum sound\nexport const SNARE_DRUM_SETTINGS = {\n  noise: {\n    type: \"white\",\n  },\n  envelope: {\n    attack: 0.001,\n    decay: 0.15,\n    sustain: 0.05,\n    release: 0.2,\n  },\n};\n\n// METAL SYNTH SETTINGS OBJECT – Adam's hi-hat cymbal drum sound\nexport const HIHAT_DRUM_SETTINGS = {\n  frequency: 200,\n  envelope: {\n    attack: 0.001,\n    decay: 0.05,\n    release: 0.05,\n  },\n  harmonicity: 5.1,\n  modulationIndex: 32,\n  resonance: 4000,\n  octaves: 1.5,\n};\n\n// SYNTH NOTES - C major scale\nexport const SYNTH_NOTES = [\"C5\", \"B4\", \"A4\", \"G4\", \"F4\", \"E4\", \"D4\", \"C4\"];\n\n// DEFAULT SEQUENSER BPM\nexport const DEFAULT_BPM = 140;\n\n// DEFAULT SYNTH WAVEFORM\nexport const DEFAULT_WAVEFORM = \"triangle\";\n\nexport const DEFAULT_SONG_TITLE = \"untitled\";\n\nexport const DEFAULT_COMPOSER = \"unknown\";\n\nexport const DRUM_ICONS = [\n  \"./assets/kick-100-inv.png\",\n  \"./assets/snare-100-inv.png\",\n  \"./assets/hihat-100-inv.png\",\n];\n\n// TURQUOISE TO PINK\n// 16 STEP COLOR GRADIENT YELLOW TO ORANGE FOR TRANSPORT BAR\nexport const COLOR_GRADIENT = [\n  \"6BFFE9\",\n  \"74F5EA\",\n  \"7DECEB\",\n  \"86E3ED\",\n  \"8FDAEE\",\n  \"98D1F0\",\n  \"A1C8F1\",\n  \"AABFF2\",\n  \"B3B5F4\",\n  \"BCACF5\",\n  \"C5A3F7\",\n  \"CE9AF8\",\n  \"D791F9\",\n  \"E088FB\",\n  \"E97FFC\",\n  \"F276FE\",\n];\n\n// YELLOW TO ORANGE\n// 16 STEP COLOR GRADIENT FOR TRANSPORT BAR\n// export const COLOR_GRADIENT = [\n//   \"FFF96B\", \"FEF264\", \"FDEB5E\", \"FDE468\",\n//   \"FCDD52\", \"FBD64C\", \"FBCF46\", \"FAC840\",\n//   \"F9C139\", \"F9BA33\", \"F8B32D\", \"F7AC27\",\n//   \"F7A521\", \"F69E1B\", \"F59715\", \"F5910F\"\n// ]\n","import React from \"react\"\nimport { SYNTH_NOTES } from \"../../constants\"\n\nclass SynthKey extends React.Component {\n\n\n  render() {\n    return (\n      <tr className=\"synthKey-row\">\n        <td className=\"tableRowExplainer tableRowExplainer--synth\">{SYNTH_NOTES[this.props.synthKeyIndex].slice(0,1)}</td>\n        {this.props.bars.map((bar, barIndex) => {\n          return <td\n            className={this.props.synthKeyMatrix[this.props.synthKeyIndex][barIndex] ?\n              \"noteBox noteBox--active\" : \"noteBox\"\n            }\n            key={barIndex}\n            onClick={() => this.props.handleNoteClick(barIndex)}\n          />\n        })}\n      </tr>\n    )\n  }\n\n}\n\nexport default SynthKey\n","import React from \"react\"\nimport SynthKey from \"./synthKey\"\nimport { COLOR_GRADIENT } from \"../../constants\"\n\nclass SynthModule extends React.Component {\n\n  passUpNoteClick = (synthKeyIndex, barIndex) => {\n    this.props.handleNoteClick(synthKeyIndex, barIndex)\n  }\n\n  render() {\n    const { synth, activeBar } = this.props\n    return (\n      <div className=\"synth-container\">\n        <table>\n          <thead>\n            <tr>\n              <td className=\"tableRowExplainer tableRowExplainer--bars\">\n                <img src={\"./assets/note-100-inv.png\"} className=\"drumIcon\" alt=\"note\"/>\n              </td>\n              {synth[0].map((bars, index) => {\n                return <th key={index} style={{backgroundColor: (index === activeBar) ? `#${COLOR_GRADIENT[index]}` : 'darkgrey'}} className={(index === activeBar) ?\n                  \"barIndicator barIndicator--active\" :\n                  \"barIndicator\"\n                }>{index + 1}</th>\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {synth.map((synthKey, synthKeyIndex) => {\n              return <SynthKey\n                key={synthKeyIndex}\n                synthKeyIndex={synthKeyIndex}\n                bars={synth[synthKeyIndex]}\n                synthKeyMatrix={synth}\n                handleNoteClick={barIndex => this.passUpNoteClick(synthKeyIndex, barIndex)} />\n            })}\n            </tbody>\n        </table>\n      </div>\n    )\n  }\n\n}\n\nexport default SynthModule\n","import React from \"react\"\nimport { DRUM_ICONS } from \"../../constants\"\n\nclass SeqDrum extends React.Component {\n\n\n  render() {\n    return (\n      <tr className=\"seqInstrument-row\">\n        <td className=\"tableRowExplainer tableRowExplainer--drums\">\n          <img src={DRUM_ICONS[this.props.drumIndex]} className=\"drumIcon\" alt=\"drum\"/>\n        </td>\n        {this.props.bars.map((bar, barIndex) => {\n          return <td\n            className={this.props.drumMatrix[this.props.drumIndex][barIndex] ?\n              \"beatBox beatBox--active\" : \"beatBox\"\n            }\n            key={barIndex}\n            onClick={() => this.props.handleDrumClick(barIndex)}\n          />\n        })}\n      </tr>\n    )\n  }\n\n}\n\nexport default SeqDrum\n","import React from \"react\"\nimport SeqDrum from \"./seqDrum\"\nimport { COLOR_GRADIENT } from \"../../constants\"\n\nclass DrumsModule extends React.Component {\n\n  passUpBeatClick = (drumIndex, barIndex) => {\n    this.props.handleDrumClick(drumIndex, barIndex)\n  }\n\n  render() {\n    const { drums, activeBar } = this.props\n    return (\n      <div className=\"drums-container\">\n        <table>\n          <thead>\n            <tr>\n              <td className=\"tableRowExplainer tableRowExplainer--bars\"></td>\n              {drums[0].map((bars, index) => {\n                return <th key={index} style={{backgroundColor: (index === activeBar) ? `#${COLOR_GRADIENT[index]}` : 'darkgrey'}} className={(index === activeBar) ?\n                  \"barIndicator barIndicator--active\" :\n                  \"barIndicator\"\n                }>{index + 1}</th>\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {drums.map((drum, drumIndex) => {\n              return <SeqDrum\n                key={drumIndex}\n                drumIndex={drumIndex}\n                bars={drums[drumIndex]}\n                drumMatrix={drums}\n                handleDrumClick={(barIndex) => this.passUpBeatClick(drumIndex, barIndex)}\n              />\n            })}\n            </tbody>\n        </table>\n      </div>\n    )\n  }\n\n}\n\nexport default DrumsModule\n","import React from \"react\"\nimport \"./settings.scss\"\nimport \"./pressRadioButtons.scss\"\nimport \"./customRangeInput.scss\"\n\nclass Settings extends React.Component {\n\n  handleBpmChange = e => {\n    this.props.changeBpm(e.target.value)\n  }\n\n  handleWaveChange = e => {\n    this.props.changeWaveForm(e.target.value)\n  }\n\n  render() {\n    const { bpm, synthWaveForm } = this.props\n    return (\n      <section className=\"settings-container\">\n        <h2 className=\"composerPage-headline\">SETTINGS</h2>\n        <div className=\"settings-container__bpm\">\n          <h3 className=\"section-heading\">TEMPO: <span className=\"highlighted\">{this.props.bpm}</span> BPM</h3>\n        </div>\n        <div className=\"meters\">\n          <input\n            name=\"bpm\"\n            type=\"range\"\n            min=\"40\"\n            max=\"300\"\n            value={bpm}\n            onChange={this.handleBpmChange} />\n        </div>\n\n        <div className=\"waveFormSetting-container\">\n          <div className=\"settings-container__waveform\">\n            <h3 className=\"section-heading section-heading--waveform\">WAVEFORM: <span className=\"highlighted\">{this.props.synthWaveForm.toUpperCase()}</span></h3>\n          </div>\n          <label className=\"radio-button-container\" htmlFor=\"triangle\">\n            <img src=\"./assets/wf-triangle-small.png\" className=\"waveform-image\" alt=\"triangle-waveform\" />\n            <input\n              type=\"radio\"\n              id=\"triangle\"\n              name=\"triangle\"\n              value=\"triangle\"\n              onChange={this.handleWaveChange}\n              checked={synthWaveForm === \"triangle\"} />\n            <span className=\"custom-radio-button\" />\n          </label>\n          <br />\n          <label className=\"radio-button-container\" htmlFor=\"square\">\n            <img src=\"./assets/wf-square-small.png\" className=\"waveform-image\" alt=\"square-waveform\" />\n            <input\n              type=\"radio\"\n              id=\"square\"\n              name=\"square\"\n              value=\"square\"\n              onChange={this.handleWaveChange}\n              checked={synthWaveForm === \"square\"} />\n            <span className=\"custom-radio-button\" />\n          </label>\n          <br />\n          <label className=\"radio-button-container\" htmlFor=\"sawtooth\">\n            <img src=\"./assets/wf-sawtooth-small.png\" className=\"waveform-image\" alt=\"sawtooth-waveform\" />\n            <input\n              type=\"radio\"\n              id=\"sawtooth\"\n              name=\"sawtooth\"\n              value=\"sawtooth\"\n              onChange={this.handleWaveChange}\n              checked={synthWaveForm === \"sawtooth\"} />\n            <span className=\"custom-radio-button\" />\n          </label>\n          <br />\n          <label className=\"radio-button-container\" htmlFor=\"sine\">\n            <img src=\"./assets/wf-sine-small.png\" className=\"waveform-image\" alt=\"sine-waveform\" />\n            <input\n              type=\"radio\"\n              id=\"sine\"\n              name=\"sine\"\n              value=\"sine\"\n              onChange={this.handleWaveChange}\n              checked={synthWaveForm === \"sine\"} />\n            <span className=\"custom-radio-button\" />\n          </label>\n          <br />\n        </div>\n      </section>\n    )\n  }\n\n}\n\nexport default Settings\n","import React from \"react\"\nimport Tone from \"tone\"\nimport StartAudioContext from \"startaudiocontext\"\nimport SynthModule from \"./synthModule\"\nimport DrumsModule from \"./drumsModule\"\nimport Settings from \"../settings/settings\"\nimport { EMPTY_SYNTH_MATRIX, EMPTY_DRUM_MATRIX, SNARE_DRUM_SETTINGS, HIHAT_DRUM_SETTINGS,\n  SYNTH_NOTES, DEFAULT_BPM, DEFAULT_WAVEFORM, DEFAULT_SONG_TITLE, DEFAULT_COMPOSER } from \"../../constants\"\nimport \"./sequenser.scss\"\n\nclass Sequenser extends React.Component {\n\nstate = {\n  synth: EMPTY_SYNTH_MATRIX(),\n  drums: EMPTY_DRUM_MATRIX(),\n  activeBar: 0,\n  resetTransport: false,\n  bpm: 140,\n  synthWaveForm: \"triangle\",\n  loadedSongTitle: DEFAULT_SONG_TITLE,\n  loadedSongComposer: DEFAULT_COMPOSER\n}\n\ncomponentDidMount() {\n  console.log(\"* Optimized for Chrome Desktop *\")\n  console.log(\"Adam Heldring – an experiment exploring the Web Audio API and Tone.js\")\n  console.log(\"wyt@adamheldring.com\")\n  Tone.Transport.cancel()\n  this.soundGenerator()\n  this.checkForActiveSession()\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n  if (this.props.newSongLoaded) {\n    this.checkForActiveSession()\n    this.props.resetSongLoader()\n  }\n  if (this.state !== prevState) {\n    sessionStorage.setItem(\"drums\", JSON.stringify(this.state.drums))\n    sessionStorage.setItem(\"synth\", JSON.stringify(this.state.synth))\n    sessionStorage.setItem(\"bpm\", this.state.bpm)\n    sessionStorage.setItem(\"waveform\", this.state.synthWaveForm)\n    sessionStorage.setItem(\"loadedSongTitle\", this.state.loadedSongTitle)\n    sessionStorage.setItem(\"loadedSongComposer\", this.state.loadedSongComposer)\n  }\n}\n\ncomponentWillUnmount() {\n  Tone.Transport.stop()\n}\n\ncheckForActiveSession = () => {\n  try {\n    if (sessionStorage && sessionStorage.getItem(\"drums\")) {\n      this.setState({\n        drums: JSON.parse(sessionStorage.getItem(\"drums\")),\n        synth: JSON.parse(sessionStorage.getItem(\"synth\")),\n        bpm: sessionStorage.getItem(\"bpm\"),\n        synthWaveForm: sessionStorage.getItem(\"waveform\"),\n        loadedSongTitle: sessionStorage.getItem(\"loadedSongTitle\"),\n        loadedSongComposer: sessionStorage.getItem(\"loadedSongComposer\"),\n      }, () => this.handleBpmChange(this.state.bpm))\n    }\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nstartPlaying = () => {\n  StartAudioContext(Tone.context, '#playButton').then(() => {\n  \tTone.Transport.start(\"+0.2\")\n  })\n}\n\nstopPlaying = () => {\n  Tone.Transport.stop()\n}\n\nrewindPlaying = () => {\n  this.setState({ resetTransport: true, activeBar: 0 })\n}\n\nhandleDrumClick = (drumIndex, barIndex) => {\n  const newDrumMatrix = this.state.drums\n  newDrumMatrix[drumIndex][barIndex] = !this.state.drums[drumIndex][barIndex]\n  this.setState({\n    drums: newDrumMatrix\n  })\n}\n\nhandleNoteClick = (synthKeyIndex, barIndex) => {\n  const newSynthMatrix = this.state.synth\n  newSynthMatrix[synthKeyIndex][barIndex] = !this.state.synth[synthKeyIndex][barIndex]\n  this.setState({\n    synth: newSynthMatrix\n  })\n}\n\nhandleBpmChange = newBpm => {\n  this.setState({\n    bpm: newBpm\n  }, () => {\n    Tone.Transport.bpm.rampTo(this.state.bpm, 0.2)\n  })\n}\n\nchangeWaveForm = newWaveForm => {\n  this.setState({\n    synthWaveForm: newWaveForm\n  })\n}\n\nclearMatrix = () => {\n  this.setState({\n    synth: EMPTY_SYNTH_MATRIX(),\n    drums: EMPTY_DRUM_MATRIX(),\n    bpm: DEFAULT_BPM,\n    synthWaveForm: DEFAULT_WAVEFORM,\n    loadedSongTitle: DEFAULT_SONG_TITLE,\n    loadedSongComposer: DEFAULT_COMPOSER\n  }, () => this.handleBpmChange(this.state.bpm))\n  sessionStorage.removeItem(\"drums\")\n  sessionStorage.removeItem(\"synth\")\n  sessionStorage.removeItem(\"bpm\")\n  sessionStorage.removeItem(\"waveform\")\n  sessionStorage.removeItem(\"loadedSongTitle\")\n  sessionStorage.removeItem(\"loadedSongComposer\")\n}\n\nsoundGenerator = () => {\n  // ---------------------- //\n  //   MASTER & FX SECTION  //\n  // ---------------------- //\n\n  Tone.Transport.bpm.value = this.state.bpm\n  Tone.context.latencyHint = \"fastest\"\n\n  // SIGNAL CHAIN: Source(Sequenser) -> Gain -> Reverb -> Master(Speakers)\n  const freeverb = new Tone.Freeverb(0.05, 15000).toMaster()\n  const gain = new Tone.Gain(0.6)\n  gain.connect(freeverb)\n\n  // --------------------//\n  //    DRUMS SECTION    //\n  // --------------------//\n\n  const drums = [\n    new Tone.MembraneSynth(),\n    new Tone.NoiseSynth(SNARE_DRUM_SETTINGS),\n    new Tone.MetalSynth(HIHAT_DRUM_SETTINGS)\n  ]\n  drums.forEach(drum => drum.connect(gain))\n\n  // --------------------//\n  //    SYNTH SECTION    //\n  // --------------------//\n\n  const synths = []\n  this.state.synth.forEach((synth, i) => (\n    synths.push(new Tone.Synth())\n  ))\n  synths.forEach(synth => synth.connect(gain))\n\n  // -------------------- //\n  //  TRANSPORT SECTION   //\n  // -------------------- //\n\n  let transportIndex = 0\n\n  // RUN LOOP\n  Tone.Transport.scheduleRepeat(time => {\n    if (this.state.resetTransport) {\n      transportIndex = 0\n      this.setState({ resetTransport: false, activeBar: 0 })\n    }\n    const step = transportIndex % 16\n    this.setState({ activeBar: step })\n\n    // UPDATE SYNTH WAVEFORM IF USER SWITCHED SETTING\n    if (synths[0].oscillator.type !== this.state.synthWaveForm) {\n      const setNewWaveForm = synths.map(synth => {\n        return new Promise(resolve => {\n          synth.oscillator.type = this.state.synthWaveForm\n          resolve()\n        })\n      })\n      Promise.all(setNewWaveForm).then(\n        // console.log(\"All synths updated to new waveform...\")\n      )\n    }\n\n    // GENERATE USER'S SYNTH NOTES\n    synths.forEach((synth, synthIndex) => {\n      if (this.state.synth[synthIndex][step]) {\n        synth.triggerAttackRelease(SYNTH_NOTES[synthIndex], \"8n\", time)\n      }\n    })\n\n    // GENERATE USER'S DRUM BEATS\n    drums.forEach((drum, drumIndex) => {\n      if (this.state.drums[drumIndex][step]) {\n        switch (drumIndex) {\n          default:\n            drums[drumIndex].triggerAttackRelease(\"C1\", \"8n\", time); break\n          case 1:\n            drums[drumIndex].triggerAttackRelease(\"16n\"); break\n          case 2:\n            drums[drumIndex].triggerAttackRelease(\"16n\", time, 0.6); break\n        }\n      }\n    })\n\n    transportIndex++\n  }, \"8n\")\n}\n\nrender() {\n\n  const { synth, drums, activeBar, bpm, synthWaveForm, loadedSongTitle, loadedSongComposer } = this.state\n  return (\n\n    <div className=\"musicMaker-wrapper\">\n      <section className=\"sequenser-container\">\n        <h1 className=\"composerPage-headline\">COMPOSE</h1>\n        {this.state.loadedSongTitle !== \"untitled\" ?\n          <h3 className=\"section-heading\">\n            {\"SONG:\"} <span className=\"highlighted\">{`\"${loadedSongTitle.toUpperCase()}\" `}</span>\n            {\" \"}\n            {\"BY:\"} <span className=\"highlighted\">{loadedSongComposer.toUpperCase()}</span>\n        </h3> : <h3 className=\"section-heading\"><span className=\"highlighted\">NEW SONG</span></h3>\n\n        }\n\n        <SynthModule\n          synth={synth}\n          activeBar={activeBar}\n          handleNoteClick={(synthKeyIndex, barIndex) => this.handleNoteClick(synthKeyIndex, barIndex)} />\n\n        <DrumsModule\n          drums={drums}\n          activeBar={activeBar}\n          handleDrumClick={(drumIndex, barIndex) => this.handleDrumClick(drumIndex, barIndex)}\n          />\n\n        <div className=\"transportControls\">\n          <button onClick={this.startPlaying} className=\"transportControl transportControl__button\" id=\"playButton\"><span className=\"transportControl__symbol\"><i className=\"fas fa-play\"></i></span><br />PLAY</button>\n          <button onClick={this.stopPlaying} className=\"transportControl transportControl__button\"><span className=\"transportControl__symbol transportControl__symbol--stop\"><i className=\"fas fa-stop\"></i></span><br />STOP</button>\n          <button onClick={this.rewindPlaying} className=\"transportControl transportControl__button\"><span className=\"transportControl__symbol\"><i className=\"fas fa-backward\"></i></span><br />REWIND</button>\n          <button onClick={this.clearMatrix} className=\"transportControl transportControl__button\"><span className=\"transportControl__symbol\"><i className=\"fas fa-eject\"></i></span><br />CLEAR</button>\n        </div>\n      </section>\n      <Settings\n        bpm={bpm}\n        changeBpm={newBpm => this.handleBpmChange(newBpm)}\n        synthWaveForm={synthWaveForm}\n        changeWaveForm={newWaveForm => this.changeWaveForm(newWaveForm)}\n        loadedSongTitle={loadedSongTitle}\n        loadedSongComposer={loadedSongComposer} />\n    </div>\n  )\n}\n\n}\n\nexport default Sequenser\n","import React from \"react\"\nimport \"./saveLoad.scss\"\nimport { WYT_SERVER_URL } from \"../../constants\"\nclass SaveLoad extends React.Component {\n\nstate = {\n  songTitle: \"\",\n  composer: \"\",\n  songList: [],\n  songToLoad: \"\",\n  loadedSong: \"\"\n}\n\ncomponentDidMount() {\n  // Load songlist from database to display in song field\n  this.loadSongList()\n}\n\nloadSongList() {\n  fetch(`${WYT_SERVER_URL}/songs/`)\n    .then(response => response.json())\n    .then(songList => {\n      this.setState({\n        songList\n      })\n    })\n}\n\nhandleFormChange = e => {\n  if (e.target.type === \"text\") {\n    this.setState({\n      [e.target.name]: e.target.value.toUpperCase()\n    })\n  } else {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n}\n\nclearFields= () => {\n  this.setState({\n    songTitle: \"\",\n    composer: \"\"\n  })\n}\n\nsubmitSave = e => {\n  e.preventDefault()\n  const { songTitle, composer } = this.state\n  const newSong = {\n    songId: Date.now(),\n    createdDate: new Date(),\n    songTitle,\n    composer,\n    drums: sessionStorage.getItem(\"drums\"),\n    synth: sessionStorage.getItem(\"synth\"),\n    bpm: sessionStorage.getItem(\"bpm\"),\n    waveform: sessionStorage.getItem(\"waveform\")\n  }\n\n  fetch(`${WYT_SERVER_URL}/songs/`, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"Post\",\n    body: JSON.stringify(newSong)\n  })\n    .then(data => {\n      console.log(\"Request success: \", data)\n      sessionStorage.setItem(\"loadedSongTitle\", songTitle)\n      sessionStorage.setItem(\"loadedSongComposer\", composer)\n      this.loadSongList()\n      this.props.loadNewSong(true)\n      this.clearFields()\n    })\n    .catch(error => {\n      console.log(\"Request failure: \", error)\n      alert(error)\n    })\n}\n\nsubmitLoad = e => {\n  e.preventDefault()\n  const { songToLoad } = this.state\n  if (!songToLoad) {\n    console.log(\"Choose a song to load...\")\n  } else {\n    fetch(`${WYT_SERVER_URL}/songs/${songToLoad}`)\n      .then(response => response.json())\n      .then(loadedSong => {\n        this.setState({\n          loadedSong\n        }, () => {\n          this.loadSongToStorage()\n        })\n      })\n  }\n}\n\nloadSongToStorage = () => {\n  const { loadedSong } = this.state\n\n  sessionStorage.setItem(\"drums\", loadedSong.drums)\n  sessionStorage.setItem(\"synth\", loadedSong.synth)\n  sessionStorage.setItem(\"bpm\", loadedSong.bpm)\n  sessionStorage.setItem(\"waveform\", loadedSong.waveform)\n  sessionStorage.setItem(\"loadedSongTitle\", loadedSong.songTitle)\n  sessionStorage.setItem(\"loadedSongComposer\", loadedSong.composer)\n\n  this.props.loadNewSong(true)\n}\n\nrender() {\n  const { songTitle, composer, songList } = this.state\n  return (\n    <div className=\"page-wrapper page-wrapper--saveLoad\">\n      <div className=\"saveForm-container\">\n        <h1 className=\"composerPage-headline composerPage-headline--saveLoad\">SAVE:</h1>\n        <form id=\"postingForm\" className=\"postingForm\" onSubmit={this.submitSave}>\n          <input className=\"formInput formInput__field\" value={songTitle} type=\"text\" placeholder=\"SONG TITLE\" name=\"songTitle\" required onChange={this.handleFormChange} />\n          <input className=\"formInput formInput__field\" value={composer} type=\"text\" placeholder=\"COMPOSER NAME\" name=\"composer\" required onChange={this.handleFormChange} />\n          <input className=\"submitButton formInput__button formInput__button--save\" type=\"submit\" value=\"SAVE\" />\n        </form>\n      </div>\n\n      <div className=\"loadForm-container\">\n        <h1 className=\"composerPage-headline composerPage-headline--saveLoad\">LOAD:</h1>\n        <form id=\"loadingForm\" className=\"loadingForm\" onSubmit={this.submitLoad}>\n          <select\n            name=\"songToLoad\"\n            className=\"formInput formInput formInput__select\"\n            onChange={this.handleFormChange}\n            size=\"5\">\n            {songList\n              .sort((a,b)=>(a.songId<b.songId) ? 1 : ((b.songId<a.songId) ? -1 : 0))\n              .map((song, index) => (\n              <option\n                key={index}\n                value={song.songId}\n                >{`${song.songTitle.toUpperCase()} (${song.composer.toUpperCase()})`}</option>\n            ))}\n          </select>\n          <input className=\"submitButton formInput__button formInput__button--load\" type=\"submit\" value=\"LOAD\" />\n        </form> \n      </div>\n\n    </div>\n  )\n}\n\n}\n\nexport default SaveLoad\n","import React from \"react\"\nimport Sequenser from \"../../amodules/sequenser/sequenser\"\nimport SaveLoad from \"../../amodules/saveLoad/saveLoad\"\n\nimport \"./composerPage.scss\"\n\nclass ComposerPage extends React.Component {\n\nstate = {\n  newSongLoaded: false\n}\n\nloadNewSong = newSongLoaded => {\n  this.setState({ newSongLoaded })\n}\n\nresetSongLoader = () => {\n  this.setState({ newSongLoaded: false })\n}\n\nrender() {\n  return (\n    <div className=\"page-wrapper page-wrapper--composerPage\">\n      <Sequenser\n        newSongLoaded={this.state.newSongLoaded}\n        resetSongLoader={this.resetSongLoader} />\n      <SaveLoad loadNewSong={newSongLoaded => this.loadNewSong(newSongLoaded)} />\n    </div>\n  )\n}\n\n}\n\nexport default ComposerPage\n","import React from \"react\"\nimport \"./404.scss\"\n\nclass NotFound extends React.Component {\n\n  render() {\n    return (\n      <div className=\"page-wrapper page-wrapper--404\">\n        <h1>404</h1>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\n\nimport Header from \"./header/header\"\nimport ComposerPage from \"./pages/composerPage/composerPage\"\nimport NotFound from \"./pages/404/404\"\nimport \"./mediaqueries.scss\"\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={ComposerPage} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/app\"\nimport \"./index.scss\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}